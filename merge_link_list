/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
    ListNode* n1 = list1;
    ListNode* n2 = list2;
    ListNode* n1_head = n1;
    ListNode* n2_head = n2;
    ListNode* n1_last = n1;
    ListNode* n2_last = n2;
    ListNode* merged_head = NULL;

    if (n1->val >= n2->val) {
        merged_head = n2_head;
        n1 = n1->next;
        n2 = n2->next;
        n2_last->next = n1_last;
        n1_last->next = n2;
        n2_last = n2_last->next;

    }
    else {
        merged_head = n1_head;
        n1 = n1->next;
        n2 = n2->next;
        n1_last->next = n2_last;
    }

    while (n1 != NULL) {
        while (n2 != NULL) {
            if (n1->val >= n2->val) {
                n1_last = n1;
                n1 = n1->next;
                n2_last = n2;
                n2 = n2->next;
                n2_last->next = n1_last;
                n1_last->next = n2;
                n2_last = n2_last->next;
            break;
            }
            else {
                n1_last = n1;
                n1 = n1->next;
                n2_last->next = n1_last;
                n1_last->next = n2;
                n2_last = n1_last;
                n2 = n2->next;
                break;
            }
        }
    }
    return merged_head;

    }
};
